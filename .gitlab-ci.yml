default:
  retry: 2
  tags:
    - k8s

variables:
  GIT_SUBMODULE_STRATEGY: normal
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1
  BUILDKIT_INLINE_CACHE: 1
  DOCKER_TLS_CERTDIR: ""

stages:
  - prepare
  - build
  - test
  - release
  - deploy
  - publish

include:
- project: 'emundus/devops/ci-cd-templates'
  ref: main
  file: '.php_security_checker.yml'
- project: 'emundus/devops/ci-cd-templates'
  ref: main
  file: '.deployer.yml'
- project: 'emundus/devops/ci-cd-templates'
  ref: main
  file: '.deployer_tchooz_auto_production.yml'
- project: 'emundus/devops/ci-cd-templates'
  ref: main
  file: '.release.yml'
- template: Security/Secret-Detection.gitlab-ci.yml

check-tchooz-version-job:
  stage: prepare
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: always
    - when: never
  image: enix/ci-toolbox:1.22
  script:
    - .ci/file-search-in-gitlab-merge-request.sh "$CI_SERVER_URL" "$GITLAB_TOKEN" "$CI_PROJECT_ID" "$CI_MERGE_REQUEST_IID" "administrator/components/com_emundus/emundus.xml"

check-commit-prefixes-job:
  stage: prepare
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: always
    - when: never
  image: enix/ci-toolbox:1.22
  script:
    - .ci/commit-prefix-compliance-check.sh "$CI_SERVER_URL" "$GITLAB_TOKEN" "$CI_PROJECT_ID" "$CI_MERGE_REQUEST_IID"

build-app-to-test-job:
  stage: build
  services:
    - name: docker:20.10-dind
  image: docker:20.10
  before_script:
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull emundus/tchooz-build-app:latest || true
    - docker build --cache-from emundus/tchooz-build-app:latest --compress -t emundus/tchooz-build-app:latest --build-arg=BUILDKIT_INLINE_CACHE=1 --build-arg xdebug=1 --build-arg jest=1 .ci/php/7.4
    - docker push emundus/tchooz-build-app:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - .ci/php/7.4/*

build-db-to-test-job:
  stage: build
  services:
    - name: docker:20.10-dind
  image: docker:20.10
  before_script:
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull emundus/tchooz-build-db:latest || true
    - docker build --cache-from emundus/tchooz-build-db:latest --compress -f Dockerfile.db -t emundus/tchooz-build-db:latest --build-arg=BUILDKIT_INLINE_CACHE=1 .
    - docker push emundus/tchooz-build-db:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - media/com_emundus_vanilla
        - Dockerfile.db
        - .ci/mysql/*

php_security_checker:
  variables:
      COMPOSER_PATH: "./libraries/emundus/composer.lock"

php_security_checker_fabrik:
  extends:
    - php_security_checker
  variables:
    COMPOSER_PATH: "./libraries/fabrik/composer.lock"

php_security_checker_gantry5:
  extends:
    - php_security_checker
  variables:
    COMPOSER_PATH: "./libraries/gantry5/composer.lock"

php_security_checker_phpgoogleapiclient:
  stage: test
  extends:
    - php_security_checker
  variables:
    COMPOSER_PATH: "./libraries/php-google-api-client/composer.lock"

phpunit-job:
  stage: test
  image: emundus/tchooz-build-app:latest
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  services:
    - name: emundus/tchooz-build-db:latest
      alias: database
    - redis:7
  before_script:
    - cp -p configuration.php configuration.php
    - cp -p media/com_emundus_vanilla/v6/.htaccess .htaccess
    - cp -pr media/com_emundus_vanilla/v6/language/overrides/* language/overrides/
    - cp -pr media/com_emundus_vanilla/v6/templates/g5_helium/* templates/g5_helium/
    - /scripts/entrypoint.sh
    - cat configuration.php
  script:
    - libraries/emundus/phpunit.phar -c phpunit.xml --coverage-text --colors=never
  only:
    - merge_request

jest-job:
  stage: test
  image: emundus/tchooz-build-app:latest
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  services:
    - name: emundus/tchooz-build-db:latest
      alias: database
    - redis:7
  before_script:
    - cp -p configuration.php configuration.php
    - cp -p media/com_emundus_vanilla/v6/.htaccess .htaccess
    - cp -pr media/com_emundus_vanilla/v6/language/overrides/* language/overrides/
    - cp -pr media/com_emundus_vanilla/v6/templates/g5_helium/* templates/g5_helium/
    - apache2-foreground &
    - /scripts/entrypoint.sh
    - cd components && yarn
  script:
    - yarn run test:unit com_emundus/ --ci --coverage
  only:
    - merge_request

release-job:
  variables:
    IMAGE_TAG: "latest"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never

sync-documentation-job:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never
  image: emundus/sync-documentation:latest
  script:
    - /go/generate-release-note.sh "$CI_SERVER_URL" "$CI_PROJECT_ID" "$GITLAB_TOKEN" "$ATLASSIAN_URL" "$ATLASSIAN_USER" "$ATLASSIAN_TOKEN" "$ATLASSIAN_SPACE" "$ATLASSIAN_PARENT_PAGE" "$ATLASSIAN_PAGE_TITLE"
  needs:
    - release-job

publish-app-image-job:
  stage: publish
  services:
    - name: docker:20.10-dind
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never
  image: docker:20.10
  before_script:
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull emundus/tchooz-app:latest || true
    - docker build --cache-from emundus/tchooz-app:latest --compress -t emundus/tchooz-app:$NEW_VERSION -t emundus/tchooz-app:latest .
    - docker push emundus/tchooz-app:$NEW_VERSION
    - docker push emundus/tchooz-app:latest
  needs:
    - release-job

publish-db-image-job:
  stage: publish
  services:
    - name: docker:20.10-dind
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never
  image: docker:20.10
  before_script:
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull emundus/tchooz-db:latest || true
    - docker build --cache-from emundus/tchooz-db:latest --compress -f Dockerfile.db -t emundus/tchooz-db:$NEW_VERSION -t emundus/tchooz-db:latest .
    - docker push emundus/tchooz-db:$NEW_VERSION
    - docker push emundus/tchooz-db:latest
  needs:
    - release-job

deployer:
  environment: 
    name: production/manual
    deployment_tier: production
  variables:
    DEPLOY_OPTIONS: 'id=lcykF9FUAo5q0nDBhRlDhtZv8QhcdqGI -vv'

deployer-auto-dev:
  environment: 
    name: development/auto
    deployment_tier: development
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: "env=dev --no-hooks -vv"
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"

deployer-auto-release:
  environment:
    name: release/auto
    deployment_tier: testing
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: "env=release --no-hooks -vv"
  rules:
    - if: $CI_COMMIT_BRANCH =~ "/^release\/.*/"

deployer-manual-eG5NEnlFOzhoskWHOJAdBE9rVfQy9ui1:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=eG5NEnlFOzhoskWHOJAdBE9rVfQy9ui1 -vv'

deployer-manual-DXCLfAeHmABj52kQobNMqhX1iFTFmOPk:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=DXCLfAeHmABj52kQobNMqhX1iFTFmOPk -vv'

deployer-manual-wpfWx493ijCjkTetfgGBM4oJVRPvCzmI:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=wpfWx493ijCjkTetfgGBM4oJVRPvCzmI -vv'

deployer-manual-qeMLDMN7ekjqkQHNtMSLsSVGFrUHYivm:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=qeMLDMN7ekjqkQHNtMSLsSVGFrUHYivm -vv'

deployer-manual-Re13IJywvAH1zGN9egF76fJeVxwV30qw:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=Re13IJywvAH1zGN9egF76fJeVxwV30qw -vv'

deployer-manual-D6RZG8YLjXwawzF3oGdVbIr5tjqSKQlE:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=D6RZG8YLjXwawzF3oGdVbIr5tjqSKQlE -vv'

deployer-manual-YOKa7VktjgVIpmw6bE4EzhteAicGQiwa:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=YOKa7VktjgVIpmw6bE4EzhteAicGQiwa -vv'

deployer-manual-1GhNXURF7R8yMncDJqzpUct48xDigvbw:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=1GhNXURF7R8yMncDJqzpUct48xDigvbw -vv'

deployer-manual-9rxEbTdVMF56BDyoBuPtpT6KWGEPHPXD:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=9rxEbTdVMF56BDyoBuPtpT6KWGEPHPXD -vv'

deployer-manual-ygUNN6FWQpqYPmSpkfFlvSdeAQnAjvfx:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=ygUNN6FWQpqYPmSpkfFlvSdeAQnAjvfx -vv'

deployer-manual-LEXyRpsCDvytDBunr4C2SSHbEPrEonTa:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=LEXyRpsCDvytDBunr4C2SSHbEPrEonTa -vv'

deployer-manual-B4jFVLQegq97qngkvbDmINGMpXllNihX:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=B4jFVLQegq97qngkvbDmINGMpXllNihX -vv'

deployer-manual-qwIcRfpnCs3r03FIphI0zeKDCgRBwbei:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=qwIcRfpnCs3r03FIphI0zeKDCgRBwbei -vv'

deployer-manual-NkKEx6e8vVvY73RaGnvGWj3VsjelPynE:
  environment: 
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=NkKEx6e8vVvY73RaGnvGWj3VsjelPynE -vv'
  
deployer-manual-XDocx5EqY4nWzyUWHTBiPoJnVkIbd6Am:
  environment:
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=XDocx5EqY4nWzyUWHTBiPoJnVkIbd6Am -vv'

deployer-manual-3xanpNYRcd3Wf6gryqebYiGqy0b6z2CP:
  environment:
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=3xanpNYRcd3Wf6gryqebYiGqy0b6z2CP -vv'

deployer-manual-VZ9GWTJzyF54O2TgJkmlA33h4KI7PoN6:
  environment:
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=VZ9GWTJzyF54O2TgJkmlA33h4KI7PoN6 -vv'

deployer-manual-SN0J72VDeveAkule0zJhV5FqCt9gZJzn:
  environment:
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=SN0J72VDeveAkule0zJhV5FqCt9gZJzn -vv'

deployer-manual-aV3qFor36GbzHg7bavbmYuhOdjuEfSct:
  environment:
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=aV3qFor36GbzHg7bavbmYuhOdjuEfSct -vv'

deployer-manual-K8fHkefVxnoUr8q3Vcr715U6uAdFLNv5:
  environment:
    name: production/manual
    deployment_tier: production
  extends:
    - deployer
  variables:
    DEPLOY_OPTIONS: 'id=K8fHkefVxnoUr8q3Vcr715U6uAdFLNv5 -vv'