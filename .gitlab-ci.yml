services:
  - docker:20.10-dind

variables:
  GIT_SUBMODULE_STRATEGY: normal
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1
  BUILDKIT_INLINE_CACHE: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_TLS_CERTDIR: ""
  DOCKER_CLIENT_TIMEOUT: 360
  COMPOSE_HTTP_TIMEOUT: 360

stages:
  - check
  - build
  - test
  - release
  - publish

check-tchooz-version-job:
  stage: check
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: always
    - when: never
  image: enix/ci-toolbox
  script:
    - .ci/file-search-in-gitlab-merge-request.sh "$CI_SERVER_URL" "$GITLAB_TOKEN" "$CI_PROJECT_ID" "$CI_MERGE_REQUEST_IID" "administrator/components/com_emundus/emundus.xml"

# build-app-to-test-job:
#   stage: build
#   image: docker:20.10
#   before_script: 
#     - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
#   script:
#     - docker pull emundus/tchooz-build-app:latest || true
#     - docker build --cache-from emundus/tchooz-build-app:latest --compress -t emundus/tchooz-build-app:latest -t emundus/tchooz-build-app:$CI_COMMIT_SHORT_SHA --build-arg=BUILDKIT_INLINE_CACHE=1 --build-arg xdebug=1 --build-arg jest=1 .
#     - docker push emundus/tchooz-build-app:$CI_COMMIT_SHORT_SHA
#     - docker push emundus/tchooz-build-app:latest
#   only:
#     - merge_request

# build-db-to-test-job:
#   stage: build
#   image: docker:20.10
#   before_script: 
#     - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
#   script:
#     - docker pull emundus/tchooz-build-db:latest || true
#     - docker build --cache-from emundus/tchooz-build-db:latest --compress -f Dockerfile.db -t emundus/tchooz-build-db:latest -t emundus/tchooz-build-db:$CI_COMMIT_SHORT_SHA --build-arg=BUILDKIT_INLINE_CACHE=1 .
#     - docker push emundus/tchooz-build-db:$CI_COMMIT_SHORT_SHA
#     - docker push emundus/tchooz-build-db:latest
#   only:
#     - merge_request

phpunit-job:
  stage: test
  image: emundus/tchooz-build-app:latest
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  services:
    - name: emundus/tchooz-build-db:latest
      alias: database
    - redis:latest
  script:
    # - cd /var/www/html/components && yarn
    # - chown -R www-data:www-data .
    # - /scripts/entrypoint.sh
    - ls -lha && cat configuration.php
    - /var/www/html/libraries/emundus/phpunit.phar -c /var/www/html/phpunit.xml --coverage-text --colors=never && echo $?
  only:
    - merge_request

jest-job:
  stage: test
  image: emundus/tchooz-build-app:latest
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  services:
    - name: emundus/tchooz-build-db:latest
      alias: database
    - redis:latest
  script:
    # - cd /var/www/html/components && yarn
    # - /scripts/entrypoint.sh
    - ls -lha && cat configuration.php
    - cd /var/www/html/components && yarn run test:unit com_emundus/ --ci --coverage && echo $?
  only:
    - merge_request

release-job:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never
  image: $CI_REGISTRY/emundus-semantic-release:latest
  script:
    - semantic-release
  artifacts:
    reports:
      dotenv: release.env

sync-documentation-job:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never
  image: $CI_REGISTRY/emundus-sync-documentation:1.0.0
  script:
    - /go/generate-release-note.sh "$CI_SERVER_URL" "$CI_PROJECT_ID" "$GITLAB_TOKEN" "$ATLASSIAN_URL" "$ATLASSIAN_USER" "$ATLASSIAN_TOKEN" "$ATLASSIAN_SPACE" "$ATLASSIAN_PARENT_PAGE" "$ATLASSIAN_PAGE_TITLE"
  needs:
    - release-job

publish-app-image-job:
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never
  image: docker:20.10
  before_script: 
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull tchooz-app:latest || true
    - docker build --cache-from tchooz-app:latest --compress -t tchooz-app:$NEW_VERSION -t tchooz-app:latest .
    - docker push tchooz-app:$NEW_VERSION
    - docker push tchooz-app:latest
  needs:
    - release-job

publish-db-image-job:
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - administrator/components/com_emundus/emundus.xml
      when: on_success
    - when: never
  image: docker:20.10
  before_script: 
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull tchooz-db:latest || true
    - docker build --cache-from tchooz-db:latest --compress -f Dockerfile.db -t tchooz-db:$NEW_VERSION -t tchooz-db:latest .
    - docker push tchooz-db:$NEW_VERSION
    - docker push tchooz-db:latest
  needs:
    - release-job
