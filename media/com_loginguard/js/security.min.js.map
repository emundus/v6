{"version":3,"sources":["security.js"],"names":[],"mappings":"aAMA,GAAqB,WAAjB,QAAO,CAAA,MAAX,CAEI,GAAI,CAAA,MAAM,CAAG,EAAb,CAGJ,MAAM,CAAC,UAAP,CAAoB,MAAM,CAAC,UAAP,EAAqB,E,CACzC,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAAgC,MAAM,CAAC,UAAP,CAAkB,WAAlB,EAAiC,CAC7D,SAAS,CAAE,IADkD,C,CAUjE,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,IAA9B,CAAqC,UAAW,IAExC,CAAA,CAAiB,CAAG,MAAM,CAAC,cAAP,CAAsB,cAAtB,CAFoB,CAGxC,CAAU,CAAG,MAAM,CAAC,cAAP,CAAsB,aAAtB,CAH2B,OAKvC,CAAA,CAAD,EAAuB,CALiB,CAaxC,MAAM,CAAC,mBAbiC,KAcxC,CAAA,mBAAmB,CAAC,UAAY,CAC5B,YAAY,CAAC,GAAb,CAAiB,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,QAA/C,CACH,CAFkB,CAEhB,CACC,OAAO,CAAE,GADV,CAFgB,CAdqB,KAwB5C,CAAA,UAAU,CAAC,UAAY,CACnB,YAAY,CAAC,GAAb,CAAiB,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,QAA/C,CACH,CAFS,CAEP,GAFO,CAxBkC,KAOxC,CAAA,MAAM,CAAC,UAAP,CAAkB,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,IAAhD,CAAsD,GAAtD,CAqBP,C,CAUD,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,QAA9B,CAAyC,SAAU,CAAV,CAAsB,CAC3D,GAAI,CAAA,CAAa,CAAG,IAAI,CAAC,SAAL,CAAe,CAAf,CAApB,CACA,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,SAA9B,CAA0C,WAAW,CAAC,GAAZ,CAAgB,OAAhB,CAAwB,CAAxB,CAC7C,C,CAGD,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,IAA9B,E,IAEI,CAAA,sCAAsC,CAAG,C,CACzC,oCAAoC,CAAG,WAAW,CAAC,UAAY,CAE/D,GAAI,CAAA,CAAM,CACkD,WAAnD,QAAO,CAAA,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,SAAtC,EAC6C,IAA5C,GAAA,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,SAFvC,CAIgD,EAA5C,IAAE,sCANyD,EAQ3D,QAAQ,CAAC,KAAT,CAAe,oBAAf,CAAoC,MAApC,EAR2D,CAW3D,CAX2D,GAiB/D,aAAa,CAAC,oCAAD,CAjBkD,CAoB/D,QAAQ,CAAC,cAAT,CAAwB,+BAAxB,EAAyD,KAAzD,CAAiE,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,SApBhC,CAqB/D,QAAQ,CAAC,KAAT,CAAe,oBAAf,CAAoC,MAApC,EArB+D,CAsBlE,CAtBqD,CAsBnD,GAtBmD,C","file":"security.min.js","sourcesContent":["/*!\n * @package   AkeebaLoginGuard\n * @copyright Copyright (c)2016-2021 Nicholas K. Dionysopoulos / Akeeba Ltd\n * @license   GNU General Public License version 3, or later\n */\n\nif (typeof akeeba == \"undefined\")\n{\n    var akeeba = {};\n}\n\nakeeba.LoginGuard = akeeba.LoginGuard || {};\nakeeba.LoginGuard.fingerprint = akeeba.LoginGuard.fingerprint || {\n    browserId: null\n};\n\n/**\n * Initialize the fingerprinting process.\n *\n * Waits until the JS we depend on is loaded. Then it calls FingerprintJS2 to do the actual fingerprinting and calls the\n * akeeba.LoginGuard.fingerprint.callback method which populates akeeba.LoginGuard.fingerprint.browserId.\n */\nakeeba.LoginGuard.fingerprint.init = function() {\n    // If the required JS has not been loaded yet check again in 100 msec\n    let hasFingerprintJS2 = window.hasOwnProperty('Fingerprint2');\n    let hasMurmur3 = window.hasOwnProperty('murmurHash3');\n\n    if (!hasFingerprintJS2 || !hasMurmur3)\n    {\n        window.setTimeout(akeeba.LoginGuard.fingerprint.init, 100);\n\n        return;\n    }\n\n    // Prefer requestIdleCallback (may take less than 500msec to run it)\n    if (window.requestIdleCallback) {\n        requestIdleCallback(function () {\n            Fingerprint2.get(akeeba.LoginGuard.fingerprint.callback);\n        }, {\n            timeout: 500\n        });\n\n        return;\n    }\n\n    // Fallback to setTimeout (always takes 500msec to run it)\n    setTimeout(function () {\n        Fingerprint2.get(akeeba.LoginGuard.fingerprint.callback);\n    }, 500)\n\n};\n\n/**\n * A FingerprintJS2 callback to populate akeeba.LoginGuard.fingerprint.browserId\n *\n * FingerprintJS2 calls this method with the components object that lists all detected browser properties. We pass this\n * object (serialized) to MurmurHash3 to get our Browser ID string.\n *\n * @param   {Object}  components\n */\nakeeba.LoginGuard.fingerprint.callback = function (components) {\n    let encodedString = JSON.stringify(components);\n    akeeba.LoginGuard.fingerprint.browserId = murmurHash3.x64.hash128(encodedString);\n};\n\n// Initialize immediately\nakeeba.LoginGuard.fingerprint.init();\n\nvar akeebaLoginGuardCaptiveCheckingCounter = 0;\nvar akeebaLoginGuardCaptiveCheckingTimer = setInterval(function () {\n    // Wait until we have a browser ID or we've been here for more than 4 seconds\n    var notYet =\n            (typeof akeeba.LoginGuard.fingerprint.browserId === 'undefined') ||\n            (akeeba.LoginGuard.fingerprint.browserId === null);\n\n    if (++akeebaLoginGuardCaptiveCheckingCounter >= 16)\n    {\n        document.forms.akeebaLoginguardForm.submit();\n    }\n\n    if (notYet)\n    {\n        return;\n    }\n\n    // Unset this timer\n    clearInterval(akeebaLoginGuardCaptiveCheckingTimer);\n\n    // Set the browser ID in the form and submit the form.\n    document.getElementById('akeebaLoginguardFormBrowserId').value = akeeba.LoginGuard.fingerprint.browserId;\n    document.forms.akeebaLoginguardForm.submit();\n}, 250);"]}